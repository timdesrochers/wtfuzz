import os
from PIL import Image
import imagehash

# Set up the directory of images
directory = "path/to/images"
image_filenames = os.listdir(directory)

# Normalize the images
def resize_shortest_side(image, size):
    width, height = image.size
    if width < height:
        new_height = int(size * height / width)
        return image.resize((size, new_height))
    else:
        new_width = int(size * width / height)
        return image.resize((new_width, size))

def crop_center(image, size):
    width, height = image.size
    left = (width - size) / 2
    top = (height - size) / 2
    right = (width + size) / 2
    bottom = (height + size) / 2
    return image.crop((left, top, right, bottom))

# Compute the image hashes and store them in a dictionary
image_hashes = {}
for filename in image_filenames:
    # Open the image and normalize it
    image = Image.open(os.path.join(directory, filename))
    resized_image = resize_shortest_side(image, 512)
    cropped_image = crop_center(resized_image, 512)

    # Compute the image hash and store it in the dictionary
    image_hash = imagehash.phash(cropped_image)
    image_hashes[filename] = str(image_hash)

# Compare the image hashes and print suspected duplicates
for filename1, hash1 in image_hashes.items():
    for filename2, hash2 in image_hashes.items():
        if filename1 != filename2:
            hash_diff = imagehash.hex_to_hash(hash1) - imagehash.hex_to_hash(hash2)
            if hash_diff < 6:
                print(f"Suspected duplicate: {filename1} and {filename2}")
